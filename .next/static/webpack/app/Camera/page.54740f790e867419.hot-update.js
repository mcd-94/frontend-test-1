"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/Camera/page",{

/***/ "(app-pages-browser)/./app/Camera/page.jsx":
/*!*****************************!*\
  !*** ./app/Camera/page.jsx ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from \"react\";\n// const CameraPage = () => {\n//   const videoRef = useRef(null);\n//   const [capturedImage, setCapturedImage] = useState(null);\n//   const [isVideoVisible, setIsVideoVisible] = useState(true);\n//   useEffect(() => {\n//     const startCamera = async () => {\n//       try {\n//         const stream = await navigator.mediaDevices.getUserMedia({\n//           video: true,\n//         });\n//         if (videoRef.current) {\n//           videoRef.current.srcObject = stream;\n//         }\n//       } catch (error) {\n//         console.error(\"Error accessing the camera:\", error);\n//       }\n//     };\n//     if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n//       startCamera();\n//     } else {\n//       console.error(\"getUserMedia is not supported in this browser.\");\n//     }\n//     return () => {\n//       if (videoRef.current && videoRef.current.srcObject) {\n//         const tracks = videoRef.current.srcObject.getTracks();\n//         tracks.forEach((track) => track.stop());\n//       }\n//     };\n//   }, []);\n//   const handleCapture = () => {\n//     const canvas = document.createElement(\"canvas\");\n//     const context = canvas.getContext(\"2d\");\n//     // Set the canvas dimensions to match the video stream\n//     canvas.width = videoRef.current.videoWidth;\n//     canvas.height = videoRef.current.videoHeight;\n//     // Draw the current video frame onto the canvas\n//     context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n//     // Convert the canvas content to a data URL (base64-encoded string)\n//     const imageDataUrl = canvas.toDataURL(\"image/png\");\n//     // Save the data URL in local storage\n//     localStorage.setItem(\"capturedImage\", imageDataUrl);\n//     // Set the captured image in the component state\n//     setCapturedImage(imageDataUrl);\n//     // Hide the video by setting isVideoVisible to false\n//     setIsVideoVisible(false);\n//   };\n//   const handleConfirm = () => {\n//     // Save the captured image string to local storage or send it to the API\n//     // ...\n//     // For demonstration, clearing local storage here\n//     localStorage.removeItem(\"capturedImage\");\n//   };\n//   const handleTryAgain = async () => {\n//     // Clear the captured image and show the video again\n//     setCapturedImage(null);\n//     setIsVideoVisible(true);\n//     // Restart the camera stream\n//     const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//     if (videoRef.current) {\n//       videoRef.current.srcObject = stream;\n//     }\n//   };\n//   return (\n//     <div className=\"cameraPage\">\n//         {isVideoVisible && (\n//           <div>\n//             <div>\n//               <video ref={videoRef} autoPlay playsInline className=\"capturedImage\"/>\n//             </div>\n//             <div className=\"cameraButtons\">\n//               <button onClick={handleCapture} className=\"shooterButton cameraButtons\">\n//                 Tomar foto\n//               </button>\n//             </div>\n//           </div>\n//         )}\n//       {capturedImage && (\n//         <div>\n//           <div>\n//             <img src={capturedImage} alt=\"Captured\" className=\"capturedImage\" />\n//           </div>\n//           <div className=\"cameraButtons\">\n//             <button onClick={handleConfirm}>Confirmar</button>\n//             <button onClick={handleTryAgain}>Nueva foto</button>\n//           </div>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default CameraPage;\n// import React, { useEffect, useRef, useState } from \"react\";\n// // Function to generate a random string of a specified length\n// const generateRandomApiKey = (length) => {\n//   const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n//   let apiKey = \"\";\n//   for (let i = 0; i < length; i++) {\n//     apiKey += characters.charAt(Math.floor(Math.random() * characters.length));\n//   }\n//   return apiKey;\n// };\n// const CameraPage = () => {\n//   const videoRef = useRef(null);\n//   const [capturedImage, setCapturedImage] = useState(null);\n//   const [isVideoVisible, setIsVideoVisible] = useState(true);\n//   const [apiResponse, setApiResponse] = useState(null);\n//   useEffect(() => {\n//     const startCamera = async () => {\n//       try {\n//         const stream = await navigator.mediaDevices.getUserMedia({\n//           video: true,\n//         });\n//         if (videoRef.current) {\n//           videoRef.current.srcObject = stream;\n//         }\n//       } catch (error) {\n//         console.error(\"Error accessing the camera:\", error);\n//       }\n//     };\n//     if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n//       startCamera();\n//     } else {\n//       console.error(\"getUserMedia is not supported in this browser.\");\n//     }\n//     return () => {\n//       if (videoRef.current && videoRef.current.srcObject) {\n//         const tracks = videoRef.current.srcObject.getTracks();\n//         tracks.forEach((track) => track.stop());\n//       }\n//     };\n//   }, []);\n//   const handleCapture = () => {\n//     const canvas = document.createElement(\"canvas\");\n//     const context = canvas.getContext(\"2d\");\n//     // Set the canvas dimensions to match the video stream\n//     canvas.width = videoRef.current.videoWidth;\n//     canvas.height = videoRef.current.videoHeight;\n//     // Draw the current video frame onto the canvas\n//     context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n//     // Convert the canvas content to a data URL (base64-encoded string)\n//     const imageDataUrl = canvas.toDataURL(\"image/png\");\n//     // Save the data URL in local storage\n//     localStorage.setItem(\"capturedImage\", imageDataUrl);\n//     // Set the captured image in the component state\n//     setCapturedImage(imageDataUrl);\n//     // Hide the video by setting isVideoVisible to false\n//     setIsVideoVisible(false);\n//   };\n//   const handleConfirm = async () => {\n//     // Get the data from local storage\n//     const selectedCoin = localStorage.getItem(\"selectedCoin\");\n//     const selectedFit = localStorage.getItem(\"selectedFit\");\n//     const capturedImage = localStorage.getItem(\"capturedImage\");\n//     // Check if the required data is available\n//     if (selectedCoin && selectedFit && capturedImage) {\n//       try {\n//         // Generate a random API key\n//         const randomApiKey = generateRandomApiKey(10);\n//         // Make a POST request to the API\n//         const response = await fetch(\n//           `https://test.aitaca.io/Aitaca/1.0.0/calculator?coin=${selectedCoin}&fitting=${selectedFit}`,\n//           {\n//             method: \"POST\",\n//             headers: {\n//               \"accept\": \"application/json\",\n//               \"x-api-key\": randomApiKey,\n//               \"Content-Type\": \"application/json\",\n//             },\n//             body: JSON.stringify({\n//               hand: capturedImage,\n//             }),\n//           }\n//         );\n//         // Check if the request was successful (status code 2xx)\n//         if (response.ok) {\n//           const responseData = await response.json();\n//           console.log(\"Data successfully sent to the API\", responseData);\n//           // Set the API response in the component state\n//           setApiResponse(responseData);\n//           // For demonstration, clearing local storage here\n//           localStorage.removeItem(\"selectedCoin\");\n//           localStorage.removeItem(\"selectedFit\");\n//           localStorage.removeItem(\"capturedImage\");\n//         } else {\n//           console.error(\"Failed to send data to the API\");\n//         }\n//       } catch (error) {\n//         console.error(\"Error sending data to the API:\", error);\n//       }\n//     } else {\n//       console.warn(\"Some data is missing in local storage\");\n//     }\n//   };\n//   const handleTryAgain = async () => {\n//     // Clear the captured image and show the video again\n//     setCapturedImage(null);\n//     setIsVideoVisible(true);\n//     // Restart the camera stream\n//     const stream = await navigator.mediaDevices.getUserMedia({ video: true });\n//     if (videoRef.current) {\n//       videoRef.current.srcObject = stream;\n//     }\n//   };\n//   return (\n//     <div className=\"cameraPage\">\n//       {isVideoVisible && (\n//         <div>\n//           <div>\n//             <video ref={videoRef} autoPlay playsInline className=\"capturedImage\" />\n//           </div>\n//           <div className=\"cameraButtons\">\n//             <button onClick={handleCapture} className=\"shooterButton cameraButtons\">\n//               Tomar foto\n//             </button>\n//           </div>\n//         </div>\n//       )}\n//       {capturedImage && (\n//         <div>\n//           <div>\n//             <img src={capturedImage} alt=\"Captured\" className=\"capturedImage\" />\n//           </div>\n//           <div className=\"cameraButtons\">\n//             <button onClick={handleConfirm}>Confirmar</button>\n//             <button onClick={handleTryAgain}>Nueva foto</button>\n//           </div>\n//         </div>\n//       )}\n//       {apiResponse && (\n//         <div>\n//           <h3>API Response:</h3>\n//           <pre>{JSON.stringify(apiResponse, null, 2)}</pre>\n//         </div>\n//       )}\n//     </div>\n//   );\n// };\n// export default CameraPage;\n\n// Function to generate a random string of a specified length\nconst generateRandomApiKey = (length)=>{\n    const characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    let apiKey = \"\";\n    for(let i = 0; i < length; i++){\n        apiKey += characters.charAt(Math.floor(Math.random() * characters.length));\n    }\n    return apiKey;\n};\nconst CameraPage = ()=>{\n    _s();\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [capturedImage, setCapturedImage] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isVideoVisible, setIsVideoVisible] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const [apiResponse, setApiResponse] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const startCamera = async ()=>{\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({\n                    video: true\n                });\n                if (videoRef.current) {\n                    videoRef.current.srcObject = stream;\n                }\n            } catch (error) {\n                console.error(\"Error accessing the camera:\", error);\n            }\n        };\n        if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {\n            startCamera();\n        } else {\n            console.error(\"getUserMedia is not supported in this browser.\");\n        }\n        return ()=>{\n            if (videoRef.current && videoRef.current.srcObject) {\n                const tracks = videoRef.current.srcObject.getTracks();\n                tracks.forEach((track)=>track.stop());\n            }\n        };\n    }, []);\n    const handleCapture = ()=>{\n        const canvas = document.createElement(\"canvas\");\n        const context = canvas.getContext(\"2d\");\n        // Set the canvas dimensions to match the video stream\n        canvas.width = videoRef.current.videoWidth;\n        canvas.height = videoRef.current.videoHeight;\n        // Draw the current video frame onto the canvas\n        context.drawImage(videoRef.current, 0, 0, canvas.width, canvas.height);\n        // Convert the canvas content to a data URL (base64-encoded string)\n        const imageDataUrl = canvas.toDataURL(\"image/png\");\n        // Save the data URL in local storage\n        localStorage.setItem(\"capturedImage\", imageDataUrl);\n        // Set the captured image in the component state\n        setCapturedImage(imageDataUrl);\n        // Hide the video by setting isVideoVisible to false\n        setIsVideoVisible(false);\n    };\n    const handleConfirm = async ()=>{\n        // Get the data from local storage\n        const selectedCoin = localStorage.getItem(\"selectedCoin\");\n        const selectedFit = localStorage.getItem(\"selectedFit\");\n        const capturedImage = localStorage.getItem(\"capturedImage\");\n        // Check if the required data is available\n        if (selectedCoin && selectedFit && capturedImage) {\n            try {\n                // Generate a random API key\n                const randomApiKey = generateRandomApiKey(10);\n                // Make a POST request to the API\n                const response = await fetch(\"https://test.aitaca.io/Aitaca/1.0.0/calculator?coin=\".concat(selectedCoin, \"&fitting=\").concat(selectedFit), {\n                    method: \"POST\",\n                    headers: {\n                        \"accept\": \"application/json\",\n                        \"x-api-key\": randomApiKey,\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify({\n                        hand: capturedImage\n                    })\n                });\n                // Check if the request was successful (status code 2xx)\n                if (response.ok) {\n                    const responseData = await response.json();\n                    console.log(\"Data successfully sent to the API\", responseData);\n                    // Set the API response in the component state\n                    setApiResponse(responseData);\n                    // Save the API response in local storage\n                    localStorage.setItem(\"apiResponse\", JSON.stringify(responseData));\n                    // For demonstration, clearing local storage here\n                    localStorage.removeItem(\"selectedCoin\");\n                    localStorage.removeItem(\"selectedFit\");\n                    localStorage.removeItem(\"capturedImage\");\n                } else {\n                    console.error(\"Failed to send data to the API\");\n                }\n            } catch (error) {\n                console.error(\"Error sending data to the API:\", error);\n            }\n        } else {\n            console.warn(\"Some data is missing in local storage\");\n        }\n    };\n    const handleTryAgain = async ()=>{\n        // Clear the captured image and show the video again\n        setCapturedImage(null);\n        setIsVideoVisible(true);\n        // Restart the camera stream\n        const stream = await navigator.mediaDevices.getUserMedia({\n            video: true\n        });\n        if (videoRef.current) {\n            videoRef.current.srcObject = stream;\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"cameraPage\",\n        children: [\n            isVideoVisible && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"video\", {\n                            ref: videoRef,\n                            autoPlay: true,\n                            playsInline: true,\n                            className: \"capturedImage\"\n                        }, void 0, false, {\n                            fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                            lineNumber: 427,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                        lineNumber: 426,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"cameraButtons\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                            onClick: handleCapture,\n                            className: \"shooterButton cameraButtons\",\n                            children: \"Tomar foto\"\n                        }, void 0, false, {\n                            fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                            lineNumber: 430,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                        lineNumber: 429,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                lineNumber: 425,\n                columnNumber: 9\n            }, undefined),\n            capturedImage && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"img\", {\n                            src: capturedImage,\n                            alt: \"Captured\",\n                            className: \"capturedImage\"\n                        }, void 0, false, {\n                            fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                            lineNumber: 440,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                        lineNumber: 439,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"cameraButtons\",\n                        children: [\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleConfirm,\n                                children: \"Confirmar\"\n                            }, void 0, false, {\n                                fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                                lineNumber: 443,\n                                columnNumber: 13\n                            }, undefined),\n                            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"button\", {\n                                onClick: handleTryAgain,\n                                children: \"Nueva foto\"\n                            }, void 0, false, {\n                                fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                                lineNumber: 444,\n                                columnNumber: 13\n                            }, undefined)\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                        lineNumber: 442,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                lineNumber: 438,\n                columnNumber: 9\n            }, undefined),\n            apiResponse && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        children: \"API Response:\"\n                    }, void 0, false, {\n                        fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                        lineNumber: 451,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"pre\", {\n                        children: JSON.stringify(apiResponse, null, 2)\n                    }, void 0, false, {\n                        fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                        lineNumber: 452,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n                lineNumber: 450,\n                columnNumber: 9\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/home/mc/code/frontend-test-1/app/Camera/page.jsx\",\n        lineNumber: 423,\n        columnNumber: 5\n    }, undefined);\n};\n_s(CameraPage, \"58BcyjTOPMoMNJYCJS3EoE8ie3A=\");\n_c = CameraPage;\n/* harmony default export */ __webpack_exports__[\"default\"] = (CameraPage);\nvar _c;\n$RefreshReg$(_c, \"CameraPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/Camera/page.jsx\n"));

/***/ })

});